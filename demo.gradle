plugins {
    id 'java'
    //id 'application'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

repositories {
    maven {
        name "ALIYUN_CENTRAL_URL"
        url 'https://maven.aliyun.com/nexus/content/repositories/central'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

group = 'com.txinf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
//applicationName = 'grad'

var lib_path=configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')

// 将依赖包复制到lib目录
task copyJar(type: Copy) {
    // 清除现有的lib目录
    delete "$buildDir/libs/lib"
    from configurations.compileClasspath
    into "$buildDir/libs/lib"
}

// 拷贝配置文件
task copyConf(type: Copy) {
    // 清除现有的配置目录
    delete "$buildDir/libs/config"
    from('src/main/resources')
    into 'build/libs/config'
}

// 拷贝配置文件
task copyBin(type: Copy) {
    // 清除现有的配置目录
    delete "$buildDir/libs/bin"
    from('src/main/scripts')
    into 'build/libs/bin'
}

jar {
    manifestContentCharset('utf-8')
    metadataCharset('utf-8')
    manifest {
        attributes "Manifest-Version": 1.0,
                "Created-By": 'Gradle 7.6',
                "Build-Jdk-Spec": "$sourceCompatibility",
                "Class-Path": ". ../ $lib_path",
                "Main-Class": 'com.txinf.grad.GradMain'
    }
    exclude("*.properties")
}

task pkg() {
    // lib目录的清除和复制任务
    dependsOn copyJar
    // 配置目录的清除和复制任务
    dependsOn copyConf
    dependsOn jar
    dependsOn copyBin
}

// 配置bootJar进行打包
bootJar {
    // jar包名称，默认是settings.gradle下的工程名 rootProject.name = 'grade'
    archiveName('grad.jar')
    // 排除所有的jar
    excludes = ["*.jar"]
    // lib目录的清除和复制任务
    dependsOn copyJar
    // 配置目录的清除和复制任务
    dependsOn copyConf
    dependsOn copyBin

    // 指定依赖包的路径
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
